2008-03-18 DARKGuy <dark.guy.2008@gmail.com>
    * core.cpp: Pixel collision tests under SDL.

2008-03-17 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp/graphics.h: Added a few comments for the new functions. Also
    I've fixed a small "bug" that was related to getting a GP2DWindow instance
    inside itself - pretty useless, thanks for pointing that out Azzkikr :).

2008-03-16 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp: Added a white border around sprites in SDL mode.

2008-03-16 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp: Okay, sprites are working with the same rendering aspect in
    OpenGL and SDL. Camera works perfectly too. By Azzkikr's suggestion in IRC
    I was able to make a GP2DWindow::getCamera() function instead, so the camera
    class was renamed back from GP2DCameraClass to GP2DCamera :).
    
    The code needs a bit of comments and range checking when accessing the
    camera vector in the getCamera() function, but I'll do that later.

2008-03-16 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp/graphics.h: Moved the whole camera class to a vector inside
    GP2DWindow, this way, every window can have an unlimited number of cameras.
    Also, I've duplicated the functions in GP2DCameraClass inside GP2DWindow.
    It's silly, but I don't know of any other way to "pass" the class functions
    to the user directly without accessing m_camera directly (and it can't).
    
    CHECKPOINT! :D
    
    OpenGL's camera range now fits the SDL's "camera range" too! values are:
    
    Range: 384
    Sprite's X&Y in relation to range: X-512 and Y+384. I don't know if this
    is resolution-independent, but it works. Just as long as nobody changes
    the camera range for doing any "camera zoom" iteam actions, we're safe.
    
    The coordinates are such because 1024/2=512 and 768/2=384, so we should use
    window->getWidth()/2 and window->getHeight()/2 instead.

2008-03-12 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp: Fixed sprite movement as velocity wasn't being taken into
    account when drawing the sprite in SDL mode. I had to add:
    
    setX(getX() + getVelocity_X());
    setY(getY() + getVelocity_Y());
    
    So the coordinates were corrected.

2008-03-11 DARKGuy <dark.guy.2008@gmail.com>
    * susi.png: There is no susi. I took the one from KIAaze's branch and put
    it in there instead.

2008-03-11 Azzkikr <krpors@users.sf.net>
    * susi.png: uploaded a new version of this one. The other was borked or 
    something. It made OpenGL display a black outline instead of the gray one.
    Not sure what happened there.
    * (graphics.cpp, graphics.h): Added prototype for GP2DPixelCollisions. These
    are to work with the GP2DSprite objects.
    * test.cpp: removed the black cube. Use a branch next time to screw around
    in plzkthx.

2008-03-11 DARKGuy <dark.guy.2008@gmail.com>
    * ChangeLog: Fixed my email address.
    * graphics.cpp/graphics.h: Added the back surface for doing the background
    clearing (only in SDL rendering mode) so sprites don't leave a trail when
    they move. Background is set to black by default, and I've made a function
    to change the color, and to return the background surface.

2008-03-10 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.cpp: Fixed the rendering of SDL sprites. Flipping buffers work,
    but an image is need to be made in order to do the flipping on, else, the 
    sprites will leave a trail when they move or rotate or anything on the
    screen. I'm at work and 180% sleepy, so I can't even think how to implement
    such "black screen" to do the flipping on without messing with OpenGL and
    create it only when in SDL and not in OpenGL (so memory isn't wasted) but
    I'll leave that for tomorrow or somebody else who wants to take this up.
    I've done my share for today ^^.
    * ChangeLog: Fixed a changelog's date (my last entry was 2008-03-10 when
    it should've been 03-09, theorically, even though the commit was made at
    like 5-6 am xD.

2008-03-09 DARKGuy <dark.guy.2008@gmail.com>
    * graphics.h: Fixed GL2D_OPENGL to GP2D_OPENGL, typo! :P
    * test2.cpp/Makefile.linux32: Created test2.cpp for my own testing
    purposes without interfering with the other test.cpp file.
    * graphics.cpp: What's with all the cube-drawing routines o.O??
    * graphics.h/graphics.cpp: Added getSurface() for GP2DWindow so it could
    return the screen surface in order to do the blitting.
    * graphics.h/graphics.cpp: Implemented SDL drawing routine for sprites.
    IT ISN'T STABLE as it needs a bit more fixing. This is just a quick svn
    commit for something that hasn't been done yet.

2008-02-24 Azzkikr <krpors@users.sf.net>
    * graphics.h: Removed circular dependencies for usage with core.h for 
    collision stuff. 
    * core.cpp: Added collision routines (basic stuff). This commit was actually
    just so I can test the fixing of the segfault in GP2DTexture's destructor.
    Code is not finished in core.cpp with the collisions and all, so mind that!
	* graphics.cpp: Fixed the segfault in GP2DTexture. 

2008-02-14 Azzkikr <krpors@users.sf.net>
    * graphics.h: Added the enumeration GP2DRenderMode which holds values of 
    modes to render (SDL/OpenGL).
    * graphics.cpp: Previous version was disfunctional because during 
    construction of GP2DWindow, a m_videomode was set to only SDL_HWPALETTE.
    When using OpenGL, we need SDL_HWPALETTE | SDL_OPENGL, or else rendering
    won't work one bit. 
    * gp2d.h: Removed constant externs. They are now the GP2DRenderMode enum.
      

2008-02-06 DARKGuy <dark.guy2008@gmail.com>
    * gp2d.h: removed the global variable g_videoAPI.
    * graphics.cpp: removed the declaration of g_videoAPI.
    * graphics.cpp/graphics.h: added a function called getAPI() for getting the
    graphic API to use.
    * graphics.cpp: replaced every g_videoAPI check with getting the instance
    of the GP2DWindow in a variable and checking for its API.

2008-02-05 Azzkikr <krpors@users.sf.net>
    * core.h: Added some commentary to the functions (initX)
    * core.cpp: Changed the (initX) functions signatures to match a throw 
    statement which is also being used in the core.h headerfile.
    * graphics.cpp: (GP2DTexture) Removed redundant check if a file exists to 
    throw an exception. It is already being thrown in the existing exception, 
    but it can be retrieved by calling GP2DException.getDetail() on the caught 
    exception (try/catch block).
    

2008-02-05 DARKGuy <dark.guy.2008@gmail.com>
	* gp2d.h: Created file. Also modified all the cpp/h files to include the
	headerfile GP2D only.
	* gp2d.h/gp2d.cpp: renamed these to core.cpp and core.h
	* gp2d.h: added GP2D_SDL=0 and GP2D_OpenGL=1 for either SDL or OpenGL
	usage.
	* graphics.h/cpp: Added setSDL() and setOpenGL() for setting the different
	API's for the engine to use.
	* graphics.cpp: Modified the current functions to make use of the SDL or
	OpenGL rendering type.
	* graphics.cpp: Added a member variable and function in GP2DTexture to
	have and return the SDL_Surface struct. This is to be used when the video
	API is set to SDL.
	* graphics.cpp: Made the error message more explicit when the texture is
	not loaded.
	* core.cpp: Added fileExists() function in order to do the check when
	loading a texture to see if the file can be found or not.
